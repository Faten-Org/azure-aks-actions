# This workflow is a starting point to integrate with the Azure SG/RG management logic
# It currently starts the creation of a new resource group
# when a Project Card (e.g. Issue inside of a Project Board) is moved to the "In progress" column.

name: Start or Stop Azure Kubernetes Service

on:
  project_card

env:
  COL_START: 'In progress'
  COL_STOP: 'Done'
  RG_NAME: 'aks-demos'
  AKS_NAME: 'aks'

jobs:
  update-project:
    if: github.event.action == 'moved'
    runs-on: [ubuntu-latest]
  
    steps:
      - uses: actions/github-script@v2
        name: Start or stop
        id: aks_crud
        # This is to ensure the project card being moved is an "issue" and not a "note"
        if: contains(github.event.project_card.content_url, 'issues/')
        with:
          script: |
            const { COL_INPG, COL_DONE } = process.env;
            const {column_id, content_url } = context.payload.project_card;

            // Retrieve column info
            const { data: { name: column_name }}  = await github.projects.getColumn({
              column_id,
            });

            switch (column_name) {
              case COL_INPG:
                console.log("Restarting AKS...");      
                core.setOutput('aks_start', true);
                break;
              case COL_DONE:
                console.log("Stopping AKS...");
                core.setOutput('aks_stop', true);
                break;
              default:
                console.log(`Column ${column_name} not found in Project Board. Skipping...`); 
                break;
            }
      - name: azure authentication
        uses: azure/login@v1
        if: ${{ steps.aks_crud.outputs.aks_start || steps.aks_crud.outputs.aks_stop }}
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Start AKS
        if: ${{ steps.aks_crud.outputs.aks_start }}
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az aks start --name $AKS_NAME --resource-group $RG_NAME
            LB_IP=$(kubectl get svc azure-vote-front -o jsonpath="{.status.loadBalancer.ingress[*].ip}")
            echo "::set-output name=aks_public_ip::$LB_IP"
            
            # TODO post reply into issue or update deployment
            echo $LB_IP
      - name: Stop AKS
        uses: azure/CLI@v1
        if: ${{ steps.aks_crud.outputs.aks_stop }}
        with:
          inlineScript: |
             az aks stop --name $AKS_NAME --resource-group $RG_NAME
